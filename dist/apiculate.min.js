/*! apiculate - v0.3 - 2014-01-10
* http://acreeser.github.io/apiculate/
* Copyright (c) 2014 ; Licensed MIT */
var apiculate=angular.module("apiculate",["ngAnimate"]);apiculate.directive("endpoint",["$http","$sce",function(a,b){return{scope:{endpoint:"=endpoint"},link:function(a){a.endpoint.call=function(){a.endpoint.calling=!0,null==a.endpoint.host&&(a.endpoint.host="local"),a.endpoint.callUrl="local"==a.endpoint.host?a.endpoint.viewUrl:window.apiculateConfig.hosts[a.endpoint.host]+a.endpoint.viewUrl;var c=!1;angular.forEach(a.endpoint.params,function(b){null!=b.example?b.example!=b.apiDefault&&(c?a.endpoint.callUrl+="&":(a.endpoint.callUrl+="?",c=!0),a.endpoint.callUrl+=b.key+"="+b.example):b.optional&&(a.endpoint.callUrl="")}),a.endpoint.callUrl=b.trustAsResourceUrl(a.endpoint.callUrl),a.endpoint.rawStatus=null,a.endpoint.raw&&a.getRaw()}},controller:["$scope",function(b){b.paramFilter=function(a){return a.optional?a.example!=a.apiDefault:null!=a.apiDefault&&null==a.example?a.apiDefault:a.example},b.endpoint.refreshUrl=function(){var a=b.endpoint.paths,c=b.endpoint.url;a&&angular.forEach(a,function(a,b){var d=a.example;d&&(-1!=c.indexOf("<<"+b+">>")?c=c.replace("<<"+b+">>",d):-1!=c.indexOf(":"+b)&&(c=c.replace(":"+b,d)))}),b.endpoint.viewUrl=c},b.getRaw=function(){a.defaults.useXDomain=!0,a({method:"GET",url:b.endpoint.callUrl}).success(function(a,c){b.endpoint.rawResponse=a,b.endpoint.rawStatus=c,b.endpoint.rawError=!1}).error(function(a,c){b.endpoint.rawResponse="",b.endpoint.rawError=a,b.endpoint.rawStatus=c}),a.defaults.useXDomain=!1},b.$watch("endpoint.raw",function(a){a&&b.getRaw()})}]}}]),apiculate.controller("MainCtrl",["$scope","$location",function(a,b){window.apiculateConfig||(window.apiculateConfig={}),window.apiculateConfig.hosts||(window.apiculateConfig.hosts={local:"localhost","default":"localhost:1234"}),a.endpoints=window.apiculateConfig.endpoints?window.apiculateConfig.endpoints:-1!=b.absUrl().indexOf("index.inline.html")?[{url:"/index.inline.html",method:"GET",description:"Fetches the apiculate inline file, which has all you need to get started with apiculate.",host:"local"}]:[{url:"/index.html",method:"GET",description:"Fetches the HTML view of apiculate",host:"local"},{url:"/js/apiculate.js",method:"GET",description:"Fetches the JS controller for apiculate",host:"local"},{url:"/css/apiculate.css",method:"GET",description:"Fetches the CSS of apiculate's view",host:"local"}],a.endpoints.sort(function(a,b){return a.url>b.url}),a.grouping={coef:-1},angular.forEach(a.endpoints,function(b){b.depth=b.url.split("/").length-2,b.viewUrl=b.url,b.searchField=(b.url+" "+b.method+" "+b.description).toLowerCase(),b.pathParams=[],angular.forEach(b.paths,function(a,c){a.key=c,b.pathParams.push(a)}),angular.forEach(b.params,function(a){null!=a.apiDefault&&(a.hasDefault=!0),a.example||(a.example=a.apiDefault)}),b.getOffset=function(){return 25*b.depth*(a.grouping.coef+1)+"px"}}),a.filter=function(b){if(void 0!=a.tokenFilter&&b.token!==a.tokenFilter)return!1;if(void 0!=a.authFilter&&b.auth!==a.authFilter)return!1;if(a.query){if("all"!=a.methodFilter&&b.method.toLowerCase()!=a.methodFilter)return!1;var c=a.query.toLowerCase();return-1!=b.searchField.toLowerCase().indexOf(c)}return"all"!=a.methodFilter?b.method.toLowerCase()==a.methodFilter:!0},a.checkParents=function(){angular.forEach(a.endpoints,function(){})},a.hideAll=function(b){angular.forEach(a.endpoints,function(a){a.hide=b})},a.methodFilter="all"}]);